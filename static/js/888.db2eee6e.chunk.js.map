{"version":3,"file":"static/js/888.db2eee6e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movie/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"goBack\":\"MovieDetails_goBack__z8Pee\",\"movieSection\":\"MovieDetails_movieSection__O7JS3\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"moviePoster\":\"MovieDetails_moviePoster__M1O9z\",\"posterImage\":\"MovieDetails_posterImage__VZLT9\",\"movieDetailsText\":\"MovieDetails_movieDetailsText__Q7hl7\",\"tabs\":\"MovieDetails_tabs__8xDA5\",\"activeTab\":\"MovieDetails_activeTab__h6QcQ\",\"castSection\":\"MovieDetails_castSection__3B5Y+\",\"reviewsSection\":\"MovieDetails_reviewsSection__cS0jD\",\"castItem\":\"MovieDetails_castItem__i26IE\",\"castImage\":\"MovieDetails_castImage__w5i0K\",\"linkStyle\":\"MovieDetails_linkStyle__fRQm7\",\"ulStyle\":\"MovieDetails_ulStyle__CCU+X\",\"castButton\":\"MovieDetails_castButton__26MMb\",\"castMargin\":\"MovieDetails_castMargin__ZgwAZ\",\"reviewsMargin\":\"MovieDetails_reviewsMargin__P24mL\"};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from 'services/Api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [movieData, castData] = await Promise.all([\n          getMovieDetails(movieId),\n          getMovieCredits(movieId),\n        ]);\n        setMovie(movieData);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        if (activeTab === 'reviews') {\n          const reviewsData = await getMovieReviews(movieId);\n          setReviews(reviewsData.results);\n        }\n      } catch (error) {\n        console.log('Error fetching reviews:', error);\n      }\n    }\n\n    fetchReviews();\n  }, [movieId, activeTab]);\n\n  const getYear = releaseDate => new Date(releaseDate).getFullYear();\n\n  const handleGoBack = () => {\n    navigate('/movies');\n  };\n\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className={css.movieDetails}>\n      <button className={css.goBack} onClick={handleGoBack}>\n        <Link to=\"/movies\" className={css.linkStyle}>\n          &larr; Go Back\n        </Link>\n      </button>\n\n      {movie && (\n        <div className={css.movieInfo}>\n          <div className={css.moviePoster}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.original_title}\n              className={css.posterImage}\n            />\n          </div>\n          <div className={css.movieDetailsText}>\n            <h1>\n              {movie.original_title} ({getYear(movie.release_date)})\n            </h1>\n            <h2>User Score: {movie.vote_average * 10}%</h2>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </div>\n      )}\n\n      <div className={css.tabs}>\n        <ul className={css.ulStyle}>\n          <li>\n            <button\n              onClick={() => handleTabClick('cast')}\n              className={`${activeTab === 'cast' ? css.activeTab : ''} ${\n                css.castButton\n              }`}\n            >\n              Cast\n            </button>\n          </li>\n          <li>\n            <button\n              onClick={() => handleTabClick('reviews')}\n              className={`${activeTab === 'reviews' ? css.activeTab : ''}`}\n            >\n              Reviews\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      {activeTab === 'cast' && (\n        <div className={css.castMargin}>\n          <h2>Cast</h2>\n          {cast.length > 0 ? (\n            cast.map(actor => (\n              <div key={actor.id} className={css.castItem}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.name}\n                  className={css.castImage}\n                />\n                <div>\n                  <h4>{actor.name}</h4>\n                  <p>Character: {actor.character}</p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div>No cast available</div>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'reviews' && (\n        <div className={css.reviewsMargin}>\n          <h2>Reviews</h2>\n          {reviews.length > 0 ? (\n            reviews.map(review => (\n              <div key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </div>\n            ))\n          ) : (\n            <div>No reviews available</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '5f1e3b1759fab00680a52c6138151c80';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.status_message || 'Something went wrong');\n  }\n};\n\nconst createApiUrl = (path, params = {}) => {\n  const queryParams = new URLSearchParams({ ...params, api_key: API_KEY });\n  return `${BASE_URL}${path}?${queryParams}`;\n};\n\nexport const getTrendingMovies = () => get(createApiUrl('/trending/movie/day'));\n\nexport const searchMovies = query => {\n  const params = { query };\n  return get(createApiUrl('/search/movie', params));\n};\n\nexport const getMovieDetails = movieId => get(createApiUrl(`/movie/${movieId}`));\n\nexport const getMovieCredits = movieId => get(createApiUrl(`/movie/${movieId}/credits`));\n\nexport const getMovieReviews = movieId => get(createApiUrl(`/movie/${movieId}/reviews`));\n"],"names":["movieId","useParams","useState","movie","setMovie","cast","setCast","reviews","setReviews","navigate","useNavigate","activeTab","setActiveTab","useEffect","Promise","all","getMovieDetails","getMovieCredits","movieData","castData","console","log","fetchData","getMovieReviews","reviewsData","results","fetchReviews","releaseDate","handleTabClick","tab","className","css","onClick","to","src","poster_path","alt","original_title","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","length","actor","profile_path","character","id","review","author","content","API_KEY","BASE_URL","get","url","params","axios","api_key","response","data","Error","status_message","createApiUrl","path","queryParams","URLSearchParams","getTrendingMovies","searchMovies","query"],"sourceRoot":""}