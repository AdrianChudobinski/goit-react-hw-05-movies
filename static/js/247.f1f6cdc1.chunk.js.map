{"version":3,"file":"static/js/247.f1f6cdc1.chunk.js","mappings":"8MAgCA,UA7Ba,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBN,EAAMO,OAAOC,SAF9B,OAEhBC,EAFgB,OAGtBN,EAAQM,EAASP,MAHK,gDAKtBQ,QAAQC,IAAI,gCAAZ,MALsB,yDAAH,qDASvBN,GACD,GAAE,CAACL,EAAMO,OAAOC,WAGf,4BACE,iCACCN,EAAKU,KAAI,SAAAC,GAAK,OACb,4BACE,wBAAKA,EAAMC,QACX,uBAAID,EAAME,cAFFF,EAAMG,GADH,MAQpB,C,wMC5BKC,EAAU,mCACVC,EAAW,+BAEXC,EAAG,mCAAG,WAAOC,GAAP,gGAAYb,EAAZ,+BAAqB,CAAC,EAAtB,kBAEec,EAAAA,EAAAA,IAAUD,EAAK,CAAEb,QAAO,kBAAMA,GAAP,IAAee,QAASL,MAF9D,cAEFR,EAFE,yBAGDA,EAASc,MAHR,sCAKF,IAAIC,OAAM,eAAMf,gBAAN,mBAAgBc,YAAhB,eAAsBE,iBAAkB,wBALhD,yDAAH,sDASHC,EAAe,SAACC,GAAuB,IAAjBpB,EAAgB,uDAAP,CAAC,EAC9BqB,EAAc,IAAIC,iBAAJ,kBAAyBtB,GAAzB,IAAiCe,QAASL,KAC9D,MAAM,GAAN,OAAUC,GAAV,OAAqBS,EAArB,YAA6BC,EAC9B,EAEYE,EAAoB,kBAAMX,EAAIO,EAAa,uBAAvB,EAEpBK,EAAe,SAAAC,GAE1B,OAAOb,EAAIO,EAAa,gBADT,CAAEM,MAAAA,IAElB,EAEYC,EAAkB,SAAAzB,GAAO,OAAIW,EAAIO,EAAa,UAAD,OAAWlB,IAA/B,EAEzBF,EAAkB,SAAAE,GAAO,OAAIW,EAAIO,EAAa,UAAD,OAAWlB,EAAX,aAApB,EAEzB0B,EAAkB,SAAA1B,GAAO,OAAIW,EAAIO,EAAa,UAAD,OAAWlB,EAAX,aAApB,C","sources":["components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/Api';\n\nconst Cast = ({ match }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await getMovieCredits(match.params.movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [match.params.movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast.map(actor => (\n        <div key={actor.id}>\n          <h4>{actor.name}</h4>\n          <p>{actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '5f1e3b1759fab00680a52c6138151c80';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, { params: { ...params, api_key: API_KEY } });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.status_message || 'Something went wrong');\n  }\n};\n\nconst createApiUrl = (path, params = {}) => {\n  const queryParams = new URLSearchParams({ ...params, api_key: API_KEY });\n  return `${BASE_URL}${path}?${queryParams}`;\n};\n\nexport const getTrendingMovies = () => get(createApiUrl('/trending/movie/day'));\n\nexport const searchMovies = query => {\n  const params = { query };\n  return get(createApiUrl('/search/movie', params));\n};\n\nexport const getMovieDetails = movieId => get(createApiUrl(`/movie/${movieId}`));\n\nexport const getMovieCredits = movieId => get(createApiUrl(`/movie/${movieId}/credits`));\n\nexport const getMovieReviews = movieId => get(createApiUrl(`/movie/${movieId}/reviews`));\n"],"names":["match","useState","cast","setCast","useEffect","fetchMovieCredits","getMovieCredits","params","movieId","response","console","log","map","actor","name","character","id","API_KEY","BASE_URL","get","url","axios","api_key","data","Error","status_message","createApiUrl","path","queryParams","URLSearchParams","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}